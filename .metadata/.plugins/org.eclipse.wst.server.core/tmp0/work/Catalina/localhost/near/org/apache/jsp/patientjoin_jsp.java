/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-10-18 11:09:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class patientjoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1696897873775L));
    _jspx_dependants.put("jar:file:/C:/khs/NearByDocProj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/NearByProj/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.2.1/css/fontawesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" />\r\n");
      out.write("\r\n");
      out.write("<!-- Noto Sans 폰트 불러오기 -->\r\n");
      out.write("\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("* {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	font-family: 'Noto Sans kr', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".outerDiv {\r\n");
      out.write("	width: 430px;\r\n");
      out.write("	height: 180px;\r\n");
      out.write("	background-color: #CFE8F7;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	padding: 10px 0;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	margin-top: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".outerDiv .logo img {\r\n");
      out.write("	width: 150px;\r\n");
      out.write("	height: 115px;\r\n");
      out.write("	vertical-align: middle;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("	margin-top: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input {\r\n");
      out.write("	height: 45px;\r\n");
      out.write("	width: 98%;\r\n");
      out.write("	margin: 20px;\r\n");
      out.write("	border: 1px solid #16151562;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	background: #ffffff;\r\n");
      out.write("	padding-left: 5px;\r\n");
      out.write("	font-size: 12pt;\r\n");
      out.write("	font-style: normal;\r\n");
      out.write("	font-weight: normal;\r\n");
      out.write("	text-decoration: inherit;\r\n");
      out.write("	color: black;\r\n");
      out.write("	text-indent: 0.5em;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button.join-button {\r\n");
      out.write("	height: 60px;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	margin-top: 30px;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	background: #CFE8F7;\r\n");
      out.write("	color: #333333;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	font-size: 14pt;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	margin: 20px auto;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input, button {\r\n");
      out.write("	margin: 10px 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input:focus {\r\n");
      out.write("	outline: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".myform {\r\n");
      out.write("	background: #fff;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	width: 400px;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	height: 932px;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	font-size: 13px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".join {\r\n");
      out.write("	text-align: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("::placeholder {\r\n");
      out.write("	color: #16151562;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".small-text {\r\n");
      out.write("	font-size: 12pt;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".join-button:hover {\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input-container {\r\n");
      out.write("	position: relative;\r\n");
      out.write("	margin-bottom: 7px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".icon {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	right: 10px;\r\n");
      out.write("	top: 50%;\r\n");
      out.write("	/* 아이콘을 수직 중앙 정렬 */\r\n");
      out.write("	transform: translateY(-50%);\r\n");
      out.write("	opacity: 0.7;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".row {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	margin-top: 1px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 우편번호 입력 칸 스타일 */\r\n");
      out.write(".input input[name='ppostcode'] {\r\n");
      out.write("	width: 130px;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	margin-right: 30px;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 우편번호 찾기 버튼 */\r\n");
      out.write(".input button[name='postcode-button'] {\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	vertical-align: bottom;\r\n");
      out.write("	background: #CFE8F7;\r\n");
      out.write("	color: #333333;\r\n");
      out.write("	border: none;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	.\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#info_pemail {\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#info_pemail button {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	width: 90px;\r\n");
      out.write("	height: 42px;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	right: 5px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	top: 3px;\r\n");
      out.write("	background: #CFE8F7;\r\n");
      out.write("	color: #333333;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#info_pidnum {\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#info_pidnum button {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	width: 90px;\r\n");
      out.write("	height: 42px;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	right: 5px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	top: 3px;\r\n");
      out.write("	background: #CFE8F7;\r\n");
      out.write("	color: #333333;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error-message {\r\n");
      out.write("	color: red;\r\n");
      out.write("	font-size: 12px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#check {\r\n");
      out.write("	color: red;\r\n");
      out.write("	display: none; /* 초기에는 숨김 처리 */\r\n");
      out.write("	right: 5px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<!-- 유효성검사 시작 -->\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document)\r\n");
      out.write("			.ready(\r\n");
      out.write("					function() {\r\n");
      out.write("						let isPidnumCheck = false;\r\n");
      out.write("						let isPemailCheck = false;\r\n");
      out.write("\r\n");
      out.write("						// 주민번호 입력 필드에서 입력 변화 감지\r\n");
      out.write("						$(\"#pidnum\").on(\r\n");
      out.write("								\"input\",\r\n");
      out.write("								function() {\r\n");
      out.write("									const pidnum = $(\"#pidnum\").val();\r\n");
      out.write("									const pidnumPattern = /^[0-9]{13}$/;\r\n");
      out.write("									const isOK = pidnumPattern.test(pidnum);\r\n");
      out.write("									if (!isOK) {\r\n");
      out.write("										$(\"#pidnumMessage\").text(\r\n");
      out.write("												\"올바른 주민번호 형식으로 입력하세요\").show();\r\n");
      out.write("										isPidnumCheck = false;\r\n");
      out.write("									} else {\r\n");
      out.write("										$(\"#pidnumMessage\").hide();\r\n");
      out.write("										isPidnumCheck = true;\r\n");
      out.write("									}\r\n");
      out.write("								});\r\n");
      out.write("\r\n");
      out.write("						// 주민번호 중복검사 버튼 클릭시\r\n");
      out.write("						$('#pidnumcheck').click(\r\n");
      out.write("								function() {\r\n");
      out.write("									if (!isPidnumCheck) {\r\n");
      out.write("										$(\"#pidnumMessage\").text(\r\n");
      out.write("												\"올바른 주민번호 형식으로 입력하세요\").show();\r\n");
      out.write("										return;\r\n");
      out.write("									}\r\n");
      out.write("\r\n");
      out.write("									const pidnum = $(\"#pidnum\").val();\r\n");
      out.write("									$.ajax({\r\n");
      out.write("										url : \"pidnumcheck\",\r\n");
      out.write("										type : \"post\",\r\n");
      out.write("										data : {\r\n");
      out.write("											pidnum : $(\"#pidnum\").val()\r\n");
      out.write("\r\n");
      out.write("										},\r\n");
      out.write("										success : function(res) {\r\n");
      out.write("											console.log(res);\r\n");
      out.write("											if (res === \"notexist\") {\r\n");
      out.write("												$(\"#pidnumMessage\").text(\r\n");
      out.write("														\"사용 가능한 주민번호입니다\")\r\n");
      out.write("														.show();\r\n");
      out.write("											} else {\r\n");
      out.write("												$(\"#pidnumMessage\").text(\r\n");
      out.write("														\"이미 가입된 주민번호입니다\")\r\n");
      out.write("														.show();\r\n");
      out.write("											}\r\n");
      out.write("										},\r\n");
      out.write("										error : function(err) {\r\n");
      out.write("											console.log(err);\r\n");
      out.write("											$(\"#pidnumMessage\").text(\r\n");
      out.write("													\"주민번호 중복체크 오류\").show();\r\n");
      out.write("										}\r\n");
      out.write("									});\r\n");
      out.write("								});\r\n");
      out.write("\r\n");
      out.write("						// 이메일 입력 필드에서 입력 변화 감지\r\n");
      out.write("						$(\"#pemail\")\r\n");
      out.write("								.on( \"input\",\r\n");
      out.write("										function() {\r\n");
      out.write("											const pemail = $(\"#pemail\").val();\r\n");
      out.write("											const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n");
      out.write("											const isValid = emailRegex\r\n");
      out.write("													.test(pemail);\r\n");
      out.write("\r\n");
      out.write("											if (!isValid) {\r\n");
      out.write("												$(\"#pemailMessage\").text(\r\n");
      out.write("														\"올바른 이메일 형식으로 입력하세요\")\r\n");
      out.write("														.show();\r\n");
      out.write("												isPemailCheck = false;\r\n");
      out.write("											} else {\r\n");
      out.write("												$(\"#pemailMessage\").hide();\r\n");
      out.write("												isPemailCheck = true;\r\n");
      out.write("											}\r\n");
      out.write("										});\r\n");
      out.write("\r\n");
      out.write("						// 이메일 중복 검사 버튼 클릭 시\r\n");
      out.write("						$('#pemailcheck')\r\n");
      out.write("								.click(\r\n");
      out.write("										function() {\r\n");
      out.write("											if (!isPemailCheck) {\r\n");
      out.write("												$(\"#pemailMessage\").text(\r\n");
      out.write("														\"올바른 이메일 형식으로 입력하세요\")\r\n");
      out.write("														.show();\r\n");
      out.write("												return;\r\n");
      out.write("											}\r\n");
      out.write("\r\n");
      out.write("											const pemail = $(\"#pemail\").val();\r\n");
      out.write("											$\r\n");
      out.write("													.ajax({\r\n");
      out.write("														url : \"pemailcheck\",\r\n");
      out.write("														type : \"post\",\r\n");
      out.write("														data : {\r\n");
      out.write("															pemail : pemail\r\n");
      out.write("														},\r\n");
      out.write("														success : function(res) {\r\n");
      out.write("															console.log(res);\r\n");
      out.write("															if (res === \"notexist\") {\r\n");
      out.write("																$(\r\n");
      out.write("																		\"#pemailMessage\")\r\n");
      out.write("																		.text(\r\n");
      out.write("																				\"사용 가능한 이메일입니다\")\r\n");
      out.write("																		.show();\r\n");
      out.write("															} else {\r\n");
      out.write("																$(\r\n");
      out.write("																		\"#pemailMessage\")\r\n");
      out.write("																		.text(\r\n");
      out.write("																				\"이미 사용중인 이메일입니다\")\r\n");
      out.write("																		.show();\r\n");
      out.write("															}\r\n");
      out.write("														},\r\n");
      out.write("														error : function(err) {\r\n");
      out.write("															console.log(err);\r\n");
      out.write("															$(\"#pemailMessage\")\r\n");
      out.write("																	.text(\r\n");
      out.write("																			\"이메일 중복체크 오류\")\r\n");
      out.write("																	.show();\r\n");
      out.write("														}\r\n");
      out.write("													});\r\n");
      out.write("										});\r\n");
      out.write("\r\n");
      out.write("						// 비밀번호 확인과 비밀번호 필드의 입력이 변경될 때 확인 함수 실행\r\n");
      out.write("						$(\"#ppasswordcheck, #ppassword\").on(\r\n");
      out.write("								\"input\",\r\n");
      out.write("								function() {\r\n");
      out.write("									const ppassword = $(\"#ppassword\").val();\r\n");
      out.write("									const ppasswordcheck = $(\"#ppasswordcheck\")\r\n");
      out.write("											.val();\r\n");
      out.write("\r\n");
      out.write("									if (ppassword !== ppasswordcheck) {\r\n");
      out.write("										$(\"#check\").show();\r\n");
      out.write("										$(\"#join-button\")\r\n");
      out.write("												.prop('disabled', true);\r\n");
      out.write("									} else {\r\n");
      out.write("										$(\"#check\").hide();\r\n");
      out.write("										$(\"#join-button\").prop('disabled',\r\n");
      out.write("												false);\r\n");
      out.write("									}\r\n");
      out.write("								});\r\n");
      out.write("\r\n");
      out.write("						// 전화번호 자동하이픈\r\n");
      out.write("						$('.ptel')\r\n");
      out.write("								.keydown(\r\n");
      out.write("										function(event) {\r\n");
      out.write("											var key = event.charCode\r\n");
      out.write("													|| event.keyCode || 0;\r\n");
      out.write("											$text = $(this);\r\n");
      out.write("											if (key !== 8 && key !== 9) {\r\n");
      out.write("												if ($text.val().length == 3) {\r\n");
      out.write("													$text\r\n");
      out.write("															.val($text.val()\r\n");
      out.write("																	+ '-');\r\n");
      out.write("												}\r\n");
      out.write("												if ($text.val().length == 8) {\r\n");
      out.write("													$text\r\n");
      out.write("															.val($text.val()\r\n");
      out.write("																	+ '-');\r\n");
      out.write("												}\r\n");
      out.write("											}\r\n");
      out.write("											return (key == 8 || key == 9\r\n");
      out.write("													|| key == 46\r\n");
      out.write("													|| (key >= 48 && key <= 57) || (key >= 96 && key <= 105));\r\n");
      out.write("										});\r\n");
      out.write("\r\n");
      out.write("						$(\"#form\").submit(function(e) {\r\n");
      out.write("							/* 			e.preventDefault();\r\n");
      out.write("							 if(isPidnumCheck==false){\r\n");
      out.write("							 alert(\"주민번호 중복체크하세요\")\r\n");
      out.write("\r\n");
      out.write("							 } */\r\n");
      out.write("						});\r\n");
      out.write("					});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("	src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	function execDaumPostcode() {\r\n");
      out.write("\r\n");
      out.write("		new daum.Postcode({\r\n");
      out.write("\r\n");
      out.write("			oncomplete : function(data) {\r\n");
      out.write("\r\n");
      out.write("				// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("\r\n");
      out.write("				// 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("\r\n");
      out.write("				// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("\r\n");
      out.write("				var addr = ''; // 주소 변수\r\n");
      out.write("\r\n");
      out.write("				var extraAddr = ''; // 참고항목 변수\r\n");
      out.write("\r\n");
      out.write("				//사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("\r\n");
      out.write("				if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("\r\n");
      out.write("					addr = data.roadAddress;\r\n");
      out.write("\r\n");
      out.write("				} else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("\r\n");
      out.write("					addr = data.jibunAddress;\r\n");
      out.write("\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				// 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("				document.getElementById('ppostcode').value = data.zonecode;\r\n");
      out.write("\r\n");
      out.write("				document.getElementById(\"proadaddress\").value = addr;\r\n");
      out.write("\r\n");
      out.write("				// 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("\r\n");
      out.write("				document.getElementById(\"pdetailaddress\").focus();\r\n");
      out.write("\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("		}).open();\r\n");
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"outerDiv\">\r\n");
      out.write("\r\n");
      out.write("		<a href=\"home\" class=\"logo\"><img src=\"image?file=logo.png\"\r\n");
      out.write("			alt=\"로고 이미지\"></a>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"myform\">\r\n");
      out.write("\r\n");
      out.write("		<form action=\"pjoin\" method=\"post\" id='form'>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"join\">\r\n");
      out.write("\r\n");
      out.write("				이메일 <span id=\"pemailMessage\" class=\"error-message\"></span>\r\n");
      out.write("\r\n");
      out.write("				<div id=\"info_pemail\">\r\n");
      out.write("\r\n");
      out.write("					<input type=\"text\" id=\"pemail\" name=\"pemail\"\r\n");
      out.write("						placeholder=\"nearbydoc@abc.com 형식으로 입력\" required=\"required\">\r\n");
      out.write("\r\n");
      out.write("					");
      out.write("\r\n");
      out.write("					<button id=\"pemailcheck\">중복 확인</button>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("				비밀번호<br>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"input-container\">\r\n");
      out.write("\r\n");
      out.write("					<input type=\"password\" id=\"ppassword\" name=\"ppassword\"\r\n");
      out.write("						class=\"form-control\" placeholder=\"\" required=\"required\" /> <span\r\n");
      out.write("						class=\"icon material-symbols-outlined\"> lock </span>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div>\r\n");
      out.write("\r\n");
      out.write("					비밀번호 확인 <span id=\"check\" class=\"invalid-feedback\"\r\n");
      out.write("						style=\"margin-left: 3px;\">비밀번호가 동일하지 않습니다.</span>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"input-container\">\r\n");
      out.write("\r\n");
      out.write("					<input type=\"password\" id=\"ppasswordcheck\" class=\"form-control\"\r\n");
      out.write("						onchange=\"check()\" placeholder=\"\" required /> <span\r\n");
      out.write("						class=\"icon material-symbols-outlined\"> lock </span>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("				주민번호 <span id=\"pidnumMessage\" class=\"error-message\"></span><br>\r\n");
      out.write("				<div id=\"info_pidnum\">\r\n");
      out.write("					<input type=\"number\" id=\"pidnum\" name=\"pidnum\" size=\"13\"\r\n");
      out.write("						placeholder=\"-없이 숫자만 입력\" required />\r\n");
      out.write("					");
      out.write("\r\n");
      out.write("					<button id=\"pidnumcheck\">중복 확인</button>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				이름<br> <input type=\"text\" id=\"pname\" name=\"pname\"\r\n");
      out.write("					placeholder=\"\" required /> \r\n");
      out.write("					휴대전화<br> <input type=\"text\"\r\n");
      out.write("					id=\"ptel\" class=\"ptel\" name=\"ptel\" maxlength=\"13\"\r\n");
      out.write("					placeholder=\"-없이 숫자만 입력\" /> 주소<br>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("					<div class=\"input\">\r\n");
      out.write("						<input type=\"text\" id=\"ppostcode\" name=\"ppostcode\"\r\n");
      out.write("							placeholder=\"우편번호\" readonly>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"input\">\r\n");
      out.write("\r\n");
      out.write("						<button type=\"button\" name=\"postcode-button\"\r\n");
      out.write("							onclick=\"execDaumPostcode()\">우편번호 찾기</button>\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<input type=\"text\" id=\"proadaddress\" name=\"proadaddress\"\r\n");
      out.write("					placeholder=\"도로명주소\" readonly>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("\r\n");
      out.write("					<input type=\"text\" id=\"pdetailaddress\" name=\"pdetailaddress\"\r\n");
      out.write("						placeholder=\"상세주소\">\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<button type=\"submit\" id=\"join-button\" class=\"join-button\" disabled>회원가입</button>\r\n");
      out.write("\r\n");
      out.write("			니어바이닥 회원이신가요? <a href=\"main\">로그인</a>\r\n");
      out.write("\r\n");
      out.write("		</form>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
