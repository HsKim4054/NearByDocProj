/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-10-19 00:48:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class hospitaljoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1696897873775L));
    _jspx_dependants.put("jar:file:/C:/khs/NearByDocProj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/NearByProj/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css\">\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.7.1.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	function openTypeSelectionPage() {\r\n");
      out.write("		// 진료과목 선택 페이지 열기\r\n");
      out.write("		var typeSelectionPage = window.open(\"department.jsp\", \"TypeSelection\",\r\n");
      out.write("				\"width=400,height=400\");\r\n");
      out.write("		window.addEventListener(\"message\", function(event) {\r\n");
      out.write("			document.querySelector(\"#department\").value = event.data;\r\n");
      out.write("		});\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("@charset \"UTF-8\";\r\n");
      out.write("\r\n");
      out.write("* {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("	font-family: 'Noto Sans kr', sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".title {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	float: left;\r\n");
      out.write("	width: 70px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	/* 가운데 정렬 */\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	white-space: nowrap;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("	/* 아래 여백 추가 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 로그인 폼 스타일 */\r\n");
      out.write("form.join-form {\r\n");
      out.write("	float: right;\r\n");
      out.write("	margin-top: 5px;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 로그인 폼 요소 스타일 */\r\n");
      out.write("form.join-form input[type=\"text\"], form.join-form input[type=\"password\"],\r\n");
      out.write("	form.join-form button {\r\n");
      out.write("	margin: 6px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("	padding: 10px;\r\n");
      out.write("	border: 2px solid;\r\n");
      out.write("	width: 500px;\r\n");
      out.write("	height: 890px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	border-radius: 20px;\r\n");
      out.write("	margin-top: 55px;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".row {\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	margin-bottom: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input {\r\n");
      out.write("	float: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input {\r\n");
      out.write("	width: 300px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	border: 1px solid gray;\r\n");
      out.write("	border-radius: 2px;\r\n");
      out.write("	text-indent: 1em;\r\n");
      out.write("	/* 들여쓰기!!*/\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type='submit'] {\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	width: 300px;\r\n");
      out.write("	height: 40px;\r\n");
      out.write("	background-color: #191970;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	text-indent: 0;\r\n");
      out.write("	border: 0;\r\n");
      out.write("	cursor:pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type='text'], input[type='number'], input[type='password'] {\r\n");
      out.write("	margin-bottom: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("input[type='file'] {\r\n");
      out.write("	border: none;\r\n");
      out.write("	margin-bottom: 4px;\r\n");
      out.write("	margin-top: 4px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 우편번호 입력 칸 스타일 */\r\n");
      out.write(".input input[name='hpostcode'] {\r\n");
      out.write("	width: 130px;\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".input input[name='hroadAddress'] {\r\n");
      out.write("	margin-bottom: 8px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 우편번호 찾기 버튼 스타일 */\r\n");
      out.write(".input button[name='postcode-button'] {\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	margin-left: 20px;\r\n");
      out.write("	height: 31px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	background-color: #191970;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	border: none;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	border-radius: 3px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#info_comnum button {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	width: 90px;\r\n");
      out.write("	height: 29.5px;\r\n");
      out.write("	border-radius: 3px;\r\n");
      out.write("	border: none;\r\n");
      out.write("	background: #191970;\r\n");
      out.write("	display: inline;\r\n");
      out.write("	color: #fff;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	margin-left: -90px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label {\r\n");
      out.write("	margin-top: 4px;\r\n");
      out.write("	font-size: 13px;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	align-items: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".label {\r\n");
      out.write("	margin-top: 2px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(".clinic_container, .lunch_container {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content:center;\r\n");
      out.write("	align-items:center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".clinic_container input {\r\n");
      out.write("	width: 120px;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".lunch_container input{\r\n");
      out.write("	width: 120px;\r\n");
      out.write("	margin: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("<!-- 사업자번호 중복검사  기능 -->\r\n");
      out.write("	$(function() {\r\n");
      out.write("		let isComnumCheck = false;\r\n");
      out.write("		let isPasswordMatch = false;\r\n");
      out.write("\r\n");
      out.write("		$('#comnumcheck').click(function() {\r\n");
      out.write("			const comnum = $(\"#comnum\").val().trim(); // 사업자번호 입력에서 공백 제거\r\n");
      out.write("			if (comnum.length !== 10) {\r\n");
      out.write("				Swal.fire(\"오류\", \"사업자등록번호는 10자리여야 합니다\", \"error\");\r\n");
      out.write("				return; // 입력 오류가 있으므로 중복 체크를 진행하지 않음\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"comnumcheck\",\r\n");
      out.write("				type : \"post\",\r\n");
      out.write("				data : {\r\n");
      out.write("					comnum : comnum\r\n");
      out.write("				},\r\n");
      out.write("				success : function(res) {\r\n");
      out.write("					console.log(res);\r\n");
      out.write("					if (res == \"notexist\") {\r\n");
      out.write("						isComnumCheck = true;\r\n");
      out.write("						Swal.fire(\"성공\", \"사용 가능합니다\", \"success\");\r\n");
      out.write("					} else {\r\n");
      out.write("						Swal.fire(\"오류\", \"사업자등록번호가 중복됩니다\", \"error\");\r\n");
      out.write("					}\r\n");
      out.write("				},\r\n");
      out.write("				error : function(err) {\r\n");
      out.write("					console.log(err);\r\n");
      out.write("					Swal.fire(\"오류\", \"사업자번호 중복체크 오류\", \"error\");\r\n");
      out.write("				}\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		$('#comnum').change(function() {\r\n");
      out.write("			isComnumCheck = false;\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		$('#hpassword').change(function() {\r\n");
      out.write("			isPasswordMatch = false;\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		$('#hpassword-confirm').change(function() {\r\n");
      out.write("			isPasswordMatch = false;\r\n");
      out.write("\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		$(\"#form\").submit(function(e) {\r\n");
      out.write("			const comnum = $(\"#comnum\").val().trim(); // 사업자번호 입력에서 공백 제거\r\n");
      out.write("			const password = $(\"#hpassword\").val();\r\n");
      out.write("			const confirmPassword = $(\"#hpassword-confirm\").val();\r\n");
      out.write("\r\n");
      out.write("			if (comnum.length !== 10) {\r\n");
      out.write("				Swal.fire(\"오류\", \"사업자등록번호는 10자리여야 합니다\", \"error\");\r\n");
      out.write("				e.preventDefault();\r\n");
      out.write("			} else if (!isComnumCheck) {\r\n");
      out.write("				Swal.fire(\"오류\", \"사업자번호 중복체크하세요\", \"error\");\r\n");
      out.write("				e.preventDefault();\r\n");
      out.write("			} else if (password !== confirmPassword) {\r\n");
      out.write("				Swal.fire(\"오류\", \"비밀번호가 일치하지 않습니다. 다시 확인해주세요\", \"error\");\r\n");
      out.write("				e.preventDefault();\r\n");
      out.write("				\r\n");
      out.write("				/*         } else {\r\n");
      out.write("				 // 회원가입 성공 메세지\r\n");
      out.write("				 Swal.fire(\"성공\", \"회원가입이 성공적으로 완료되었습니다!\", \"success\")\r\n");
      out.write("				 e.preventDefault();\r\n");
      out.write("				 */\r\n");
      out.write("				/*             \r\n");
      out.write("				 .then((result) => {\r\n");
      out.write("				 if (result.isConfirmed) {\r\n");
      out.write("					$.ajax({\r\n");
      out.write("						url:\"pjoin\",\r\n");
      out.write("						type:\"post\",\r\n");
      out.write("						data:\r\n");
      out.write("							\r\n");
      out.write("						success:function(res){\r\n");
      out.write("							location.href=res\r\n");
      out.write("\r\n");
      out.write("					 \r\n");
      out.write("				 }\r\n");
      out.write("				 });   */\r\n");
      out.write("			}\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	//htel 전화번호에 자동 하이픈\r\n");
      out.write("	$(function() {\r\n");
      out.write("		$(\"#htel\").keyup(\r\n");
      out.write("				function() {\r\n");
      out.write("					var val = $(this).val().replace(/[^0-9]/g, '');\r\n");
      out.write("					if (val.length > 3 && val.length < 6) {\r\n");
      out.write("						var tmp = val.substring(0, 2)\r\n");
      out.write("						if (tmp == \"02\") {\r\n");
      out.write("							$(this).val(\r\n");
      out.write("									val.substring(0, 2) + \"-\"\r\n");
      out.write("											+ val.substring(2));\r\n");
      out.write("						} else {\r\n");
      out.write("							$(this).val(\r\n");
      out.write("									val.substring(0, 3) + \"-\"\r\n");
      out.write("											+ val.substring(3));\r\n");
      out.write("						}\r\n");
      out.write("					} else if (val.length > 6) {\r\n");
      out.write("						var tmp = val.substring(0, 2)\r\n");
      out.write("						var tmp2 = val.substring(0, 4)\r\n");
      out.write("						if (tmp == \"02\") {\r\n");
      out.write("							if (val.length == \"10\") {\r\n");
      out.write("								$(this).val(\r\n");
      out.write("										val.substring(0, 2) + \"-\"\r\n");
      out.write("												+ val.substring(2, 6) + \"-\"\r\n");
      out.write("												+ val.substring(6));\r\n");
      out.write("							} else {\r\n");
      out.write("								$(this).val(\r\n");
      out.write("										val.substring(0, 2) + \"-\"\r\n");
      out.write("												+ val.substring(2, 5) + \"-\"\r\n");
      out.write("												+ val.substring(5));\r\n");
      out.write("							}\r\n");
      out.write("						} else if (tmp2 == \"0505\") {\r\n");
      out.write("							if (val.length == \"12\") {\r\n");
      out.write("								$(this).val(\r\n");
      out.write("										val.substring(0, 4) + \"-\"\r\n");
      out.write("												+ val.substring(4, 8) + \"-\"\r\n");
      out.write("												+ val.substring(8));\r\n");
      out.write("							} else {\r\n");
      out.write("								$(this).val(\r\n");
      out.write("										val.substring(0, 4) + \"-\"\r\n");
      out.write("												+ val.substring(4, 7) + \"-\"\r\n");
      out.write("												+ val.substring(7));\r\n");
      out.write("							}\r\n");
      out.write("						} else {\r\n");
      out.write("							if (val.length == \"11\") {\r\n");
      out.write("								$(this).val(\r\n");
      out.write("										val.substring(0, 3) + \"-\"\r\n");
      out.write("												+ val.substring(3, 7) + \"-\"\r\n");
      out.write("												+ val.substring(7));\r\n");
      out.write("							} else {\r\n");
      out.write("								$(this).val(\r\n");
      out.write("										val.substring(0, 3) + \"-\"\r\n");
      out.write("												+ val.substring(3, 6) + \"-\"\r\n");
      out.write("												+ val.substring(6));\r\n");
      out.write("							}\r\n");
      out.write("						}\r\n");
      out.write("					}\r\n");
      out.write("				});\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("		<script type=\"text/javascript\">\r\n");
      out.write("		\r\n");
      out.write("		//시간 넣는 것\r\n");
      out.write("				function inputTimeColon(time) {\r\n");
      out.write("\r\n");
      out.write("					// replace 함수를 사용하여 콜론( : )을 공백으로 치환한다.\r\n");
      out.write("					var replaceTime = time.value.replace(/\\:/g, \"\");\r\n");
      out.write("\r\n");
      out.write("					// 텍스트박스의 입력값이 4~5글자 사이가 되는 경우에만 실행한다.\r\n");
      out.write("					if (replaceTime.length >= 4 && replaceTime.length < 5) {\r\n");
      out.write("\r\n");
      out.write("						var hours = replaceTime.substring(0, 2); // 선언한 변수 hours에 시간값을 담는다.\r\n");
      out.write("						var minute = replaceTime.substring(2, 4); // 선언한 변수 minute에 분을 담는다.\r\n");
      out.write("\r\n");
      out.write("						// isFinite함수를 사용하여 문자가 선언되었는지 확인한다.\r\n");
      out.write("						if (isFinite(hours + minute) == false) {\r\n");
      out.write("							Swal.fire(\"오류\", \"문자는 입력하실 수 없습니다\", \"error\");\r\n");
      out.write("							time.value = \"00:00\";\r\n");
      out.write("							return false;\r\n");
      out.write("						}\r\n");
      out.write("\r\n");
      out.write("						// 두 변수의 시간과 분을 합쳐 입력한 시간이 24시가 넘는지를 체크한다.\r\n");
      out.write("						if (hours + minute > 2400) {\r\n");
      out.write("							Swal.fire(\"오류\",\"시간은 24시를 넘길 수 없습니다\",\"error\");\r\n");
      out.write("							time.value = \"24:00\";\r\n");
      out.write("							return false;\r\n");
      out.write("						}\r\n");
      out.write("\r\n");
      out.write("						// 입력한 분의 값이 60분을 넘는지 체크한다.\r\n");
      out.write("						if (minute > 60) {\r\n");
      out.write("							Swal.fire(\"오류\",\"분은 60분을 넘길 수 없습니다\",\"error\");\r\n");
      out.write("							time.value = hours + \":00\";\r\n");
      out.write("							return false;\r\n");
      out.write("						}\r\n");
      out.write("\r\n");
      out.write("						time.value = hours + \":\" + minute;\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script\r\n");
      out.write("	src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("	function execDaumPostcode1() {\r\n");
      out.write("		new daum.Postcode({\r\n");
      out.write("			oncomplete : function(data) {\r\n");
      out.write("				// 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.\r\n");
      out.write("				// 각 주소의 노출 규칙에 따라 주소를 조합한다.\r\n");
      out.write("				// 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.\r\n");
      out.write("				var addr = ''; // 주소 변수\r\n");
      out.write("				var extraAddr = ''; // 참고항목 변수\r\n");
      out.write("\r\n");
      out.write("				//사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\r\n");
      out.write("				if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\r\n");
      out.write("					addr = data.roadAddress;\r\n");
      out.write("				} else { // 사용자가 지번 주소를 선택했을 경우(J)\r\n");
      out.write("					addr = data.jibunAddress;\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				// 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\r\n");
      out.write("				if (data.userSelectedType === 'R') {\r\n");
      out.write("					// 법정동명이 있을 경우 추가한다. (법정리는 제외)\r\n");
      out.write("					// 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("					if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {\r\n");
      out.write("						extraAddr += data.bname;\r\n");
      out.write("					}\r\n");
      out.write("					// 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("					if (data.buildingName !== '' && data.apartment === 'Y') {\r\n");
      out.write("						extraAddr += (extraAddr !== '' ? ', '\r\n");
      out.write("								+ data.buildingName : data.buildingName);\r\n");
      out.write("					}\r\n");
      out.write("					// 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("					if (extraAddr !== '') {\r\n");
      out.write("						extraAddr = ' (' + extraAddr + ')';\r\n");
      out.write("					}\r\n");
      out.write("					// 조합된 참고항목을 해당 필드에 넣는다.\r\n");
      out.write("					document.getElementById(\"extraAddress\").value = extraAddr;\r\n");
      out.write("\r\n");
      out.write("				} else {\r\n");
      out.write("					document.getElementById(\"extraAddress\").value = '';\r\n");
      out.write("				}\r\n");
      out.write("\r\n");
      out.write("				// 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("				document.getElementById('hpostcode').value = data.zonecode;\r\n");
      out.write("				document.getElementById(\"haddress\").value = addr;\r\n");
      out.write("				addressSearch(addr);\r\n");
      out.write("				// 커서를 상세주소 필드로 이동한다.\r\n");
      out.write("				document.getElementById(\"hdetailAddress\").focus();\r\n");
      out.write("			}\r\n");
      out.write("		}).open();\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<title>병원등록</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	");

	pageContext.include("hospitalheader.jsp");
	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<div class=\"container\" id='query'>\r\n");
      out.write("\r\n");
      out.write("		<form action=\"hjoin\" method=\"post\" id=\"form\"\r\n");
      out.write("			enctype=\"multipart/form-data\">\r\n");
      out.write("\r\n");
      out.write("			<div class=\"title\">병원등록</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<label for=\"hname\">병원명 </label> <br> \r\n");
      out.write("					<input type=\"text\" id=\"hname\" name=\"hname\" placeholder=\"병원명\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div id=\"info_comnum\">\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("					<div class=\"input\">\r\n");
      out.write("						<label for=\"comnum\">사업자등록번호 </label> <br> \r\n");
      out.write("						<input type=\"number\" id=\"comnum\" name=\"comnum\" placeholder=\"사업자등록번호\" required=\"required\" />\r\n");
      out.write("						<button id=\"comnumcheck\">중복 확인</button>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<label for=\"hpassword\">비밀번호 </label> <br> <input\r\n");
      out.write("						type=\"password\" id=\"hpassword\" name=\"hpassword\" placeholder=\"비밀번호\" required=\"required\" />\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<label for=\"hpassword-confirm\">비밀번호 재확인 </label> <br> <input\r\n");
      out.write("						type=\"password\" id=\"hpassword-confirm\" placeholder=\"비밀번호 재확인\"\r\n");
      out.write("						required=\"required\" />\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<label for=\"hadress\">주소 </label> <br>\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<input type=\"text\" id=\"hpostcode\" name=\"hpostcode\"\r\n");
      out.write("						placeholder=\"우편번호\" readonly>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<button type=\"button\" name=\"postcode-button\"\r\n");
      out.write("						onclick=\"execDaumPostcode1()\">우편번호 찾기</button>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<input type=\"text\" id=\"haddress\" name=\"hroad\" placeholder=\"도로명 주소\"\r\n");
      out.write("						onblur=\"addressSearch(this.value)\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>			\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<input type=\"text\" id=\"hdetailAddress\" name=\"hdetail\"\r\n");
      out.write("						placeholder=\"상세주소\">\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("			<input type=\"text\" id=\"extraAddress\" name=\"hdong\" placeholder=\"참고항목\">\r\n");
      out.write("\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<script type=\"text/javascript\"\r\n");
      out.write("				src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=0f92754065fd18fb9b2450d8077e930c&libraries=services,drawing\"></script>\r\n");
      out.write("\r\n");
      out.write("			<script>\r\n");
      out.write("				var geocoder = new kakao.maps.services.Geocoder();\r\n");
      out.write("				function addressSearch(haddress) {\r\n");
      out.write("					geocoder\r\n");
      out.write("							.addressSearch(\r\n");
      out.write("									haddress,\r\n");
      out.write("									function(result, status) {\r\n");
      out.write("										if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("											//주소를 좌표로변환한 결과에서 위도와 경도를 얻어온다\r\n");
      out.write("											var latitude = result[0].y;\r\n");
      out.write("											var longitude = result[0].x;\r\n");
      out.write("											var coords = new kakao.maps.LatLng(\r\n");
      out.write("													result[0].y, result[0].x);\r\n");
      out.write("											console.log(latitude);\r\n");
      out.write("											console.log(longitude);\r\n");
      out.write("											console.log(coords);\r\n");
      out.write("											// 위경도 넣는다 input에\r\n");
      out.write("											document.getElementById('latitude').value = latitude;\r\n");
      out.write("											document\r\n");
      out.write("													.getElementById(\"longitude\").value = longitude;\r\n");
      out.write("\r\n");
      out.write("										} else {\r\n");
      out.write("											console.error('오류');\r\n");
      out.write("\r\n");
      out.write("										}\r\n");
      out.write("									});\r\n");
      out.write("				}\r\n");
      out.write("			</script>\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("			<input type=\"hidden\" id=\"latitude\" name=\"lat\" placeholder=\"위도\">\r\n");
      out.write("			<input type=\"hidden\" id=\"longitude\" name=\"lon\" placeholder=\"경도\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<label for=\"htel\">전화번호 </label> <br> \r\n");
      out.write("					<input type=\"text\" maxlength=\"13\" id=\"htel\" class=\"htel\" name=\"htel\" placeholder=\"전화번호\" />\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<label for=\"htel\">진료과목명 </label> <br> <input type=\"text\"\r\n");
      out.write("						class=\"type\" placeholder=\"진료과목명\" onclick=\"openTypeSelectionPage()\"\r\n");
      out.write("						name=\"department\" id=\"department\" required=\"required\" />\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<label for=\"clinic\">진료시간 </label> <br>\r\n");
      out.write("					<div class=\"clinic_container\">\r\n");
      out.write("						<input type=\"text\" name =\"clinic1\" id=\"clinic\" class=\"timeBox\"\r\n");
      out.write("							onKeyup=\"inputTimeColon(this);\" placeholder=\"HH:MM\" maxlength=\"5\" />\r\n");
      out.write("							~\r\n");
      out.write("						<input type=\"text\" name =\"clinic2\" id=\"clinic\" class=\"timeBox\"\r\n");
      out.write("							onKeyup=\"inputTimeColon(this);\" placeholder=\"HH:MM\" maxlength=\"5\" />\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<label for=\"lunch\">점심시간 </label> <br>\r\n");
      out.write("					<div class=\"lunch_container\">\r\n");
      out.write("						<input type=\"text\" name =\"lunch1\" class=\"timeBox\" onKeyup=\"inputTimeColon(this);\"\r\n");
      out.write("							placeholder=\"HH:MM\" maxlength=\"5\" /> ~ <input type=\"text\"\r\n");
      out.write("							name =\"lunch2\" class=\"timeBox\" onKeyup=\"inputTimeColon(this);\"\r\n");
      out.write("							placeholder=\"HH:MM\" maxlength=\"5\" />\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"row\">\r\n");
      out.write("				<div class=\"input\">\r\n");
      out.write("					<label for=\"file\">병원사진등록 </label> <br> \r\n");
      out.write("					<input type=\"file\"\r\n");
      out.write("						name=\"file\" id=\"file\" accept=\"image/*\" />\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div class=\"button\">\r\n");
      out.write("				<input type=\"submit\" value=\"병 원 등 록\">\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<div>\r\n");
      out.write("				니어바이닥 병원회원이신가요? <a href=\"hlogin\">로그인</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
