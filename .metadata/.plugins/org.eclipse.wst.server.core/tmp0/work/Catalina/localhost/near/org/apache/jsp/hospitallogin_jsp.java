/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.80
 * Generated at: 2023-10-19 00:48:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class hospitallogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1696897873775L));
    _jspx_dependants.put("jar:file:/C:/khs/NearByDocProj/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/NearByProj/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200\" />\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100;300;400;500;700;900&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function validateForm(){\r\n");
      out.write("    var comnum = document.getElementById(\"comnum\").value;\r\n");
      out.write("    var password = document.getElementById(\"hpassword\").value;\r\n");
      out.write("	\r\n");
      out.write("    if(comnum===\"\"){\r\n");
      out.write("    	alert(\"사업자등록번호를 입력하세요\");\r\n");
      out.write("    	return false;\r\n");
      out.write("    	}\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    // 비밀번호 필드가 비어 있는지 확인\r\n");
      out.write("    if (password === \"\") {\r\n");
      out.write("        alert(\"비밀번호를 입력하세요.\");\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("    return true;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("	<title>NearByDoc for Hospital</title>\r\n");
      out.write("	<style>\r\n");
      out.write("		* {\r\n");
      out.write("			margin: 0;\r\n");
      out.write("			padding: 0;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		a {\r\n");
      out.write("			text-decoration: none;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		body {\r\n");
      out.write("			font-family: 'Noto Sans kr', sans-serif;\r\n");
      out.write("		}\r\n");
      out.write("		/* 로그인 폼 스타일 */\r\n");
      out.write("		form.login-form {\r\n");
      out.write("			float: right;\r\n");
      out.write("			margin-top: 10px;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		/* 로그인 폼 요소 스타일 */\r\n");
      out.write("		form.login-form input[type=\"text\"],\r\n");
      out.write("		form.login-form input[type=\"password\"],\r\n");
      out.write("		form.login-form button {\r\n");
      out.write("			margin: 10px;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		body {\r\n");
      out.write("			margin: 0 auto;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.container {\r\n");
      out.write("			padding: 10px;\r\n");
      out.write("			border: 2px solid;\r\n");
      out.write("			width: 500px;\r\n");
      out.write("			height: 470px;\r\n");
      out.write("			display: flex;\r\n");
      out.write("			justify-content: center;\r\n");
      out.write("			align-items: center;\r\n");
      out.write("			border-radius: 20px;\r\n");
      out.write("			margin-top: 60px;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.input-container {\r\n");
      out.write("			position: relative;\r\n");
      out.write("			margin-bottom: 30px;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.icon {\r\n");
      out.write("			position: absolute;\r\n");
      out.write("			left: 10px;\r\n");
      out.write("			top: 50%;\r\n");
      out.write("			transform: translateY(-50%);\r\n");
      out.write("			opacity: 0.7;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		input {\r\n");
      out.write("			width: 300px;\r\n");
      out.write("			height: 40px;\r\n");
      out.write("			padding-left: 40px;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		button[type='submit'] {\r\n");
      out.write("			font-weight: bold;\r\n");
      out.write("			font-size: 16px;\r\n");
      out.write("			width: 330px;\r\n");
      out.write("			height: 50px;\r\n");
      out.write("			background-color: #191970;\r\n");
      out.write("			color: #fff;\r\n");
      out.write("			border: none;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.login-button:hover {\r\n");
      out.write("			cursor: pointer;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.new {\r\n");
      out.write("			margin-top: 20px;\r\n");
      out.write("			margin-bottom: 5px;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		.log {\r\n");
      out.write("			color: black;\r\n");
      out.write("			font-size: 14pt;\r\n");
      out.write("			font-weight: 400;\r\n");
      out.write("			text-align: left;\r\n");
      out.write("			padding-top: 40px;\r\n");
      out.write("			margin-top: 5px;\r\n");
      out.write("			margin-bottom: 50px;\r\n");
      out.write("			margin-left: 10px;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("	</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
 pageContext.include("hospitalheader.jsp"); 
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<center>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"container\" id='form'>\r\n");
      out.write("			<form action=\"hlogin\" method=\"post\" id='form' onsubmit=\"return validateForm()\">\r\n");
      out.write("				<div class=\"log\">\r\n");
      out.write("					<span class=\"large-text\">반갑습니다</span> <br>\r\n");
      out.write("					<span class=\"small-text\">더 나은 병원 정보 확인, 예약을 향한 지름길</span>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"input-container\">\r\n");
      out.write("					<span class=\"icon material-symbols-outlined\">local_hospital</span>\r\n");
      out.write("					<input type=\"number\" placeholder=\"사업자등록번호\" id=\"comnum\" name=\"comnum\" required=\"required\" />\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"input-container\">\r\n");
      out.write("					<span class=\"icon material-symbols-outlined\">lock</span>\r\n");
      out.write("					<input type=\"password\" placeholder=\"비밀번호\" id=\"hpassword\" name=\"hpassword\" required=\"required\" />\r\n");
      out.write("				</div>\r\n");
      out.write("				<button type=\"submit\" class=\"login-button\">로그인</button>\r\n");
      out.write("\r\n");
      out.write("				<div class=\"new\">니어바이닥이 처음이신가요? <a href=\"hjoin\">회원가입</a></div>\r\n");
      out.write("				<div class=\"wrong\">병원을 예약하러 오셨나요? <a href=\"main\">니어바이닥 바로가기</a></div>\r\n");
      out.write("				\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("	</center>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
